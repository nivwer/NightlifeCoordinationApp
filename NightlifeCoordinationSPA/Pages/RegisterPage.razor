@page "/register"

@using System.Net.Http
@using System.Net.Http.Json
@using Data

@inject HttpClient Http
@inject NavigationManager Navigate

<PageTitle>Nightlife - Register</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper Class="pa-10 my-10 ">
        <EditForm Model="@oUser" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />

            <MudText Typo="Typo.h4">Register</MudText>

            <MudTextField Label="Email" @bind-Value="oUser.Email" For="@(() => oUser.Email)" />

            <MudTextField Label="Password" @bind-Value="oUser.Password" For="@(() => oUser.Password)"
                InputType="InputType.Password" HelperText="Choose a strong password" />

            <MudTextField Label="Password" @bind-Value="oUser.Password2" For="@(() => oUser.Password2)"
                InputType="InputType.Password" HelperText="Repeat the password" />


            <div class="d-flex align-center justify-space-between">
                <MudCheckBox T="bool" Label="I agree!" Required="true" />

                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                    Class="ml-auto">
                    Register
                </MudButton>
            </div>
        </EditForm>
    </MudPaper>
</MudContainer>

@code {
    UserRegisterDto oUser = new UserRegisterDto();
    public string Url = "/register";
    private async Task OnValidSubmit()
    {
        var res = await Http.PostAsJsonAsync<UserRegisterDto>(Url, oUser);

        if (res.IsSuccessStatusCode)
        {
            StateHasChanged();
            Navigate.NavigateTo("/login");
        }
        else
        {
            var oError = await res.Content.ReadFromJsonAsync<ErrorResponseDto>();

            if (oError != null)
            {
                if (oError.Errors != null && oError.Errors.ContainsKey("DuplicateUserName"))
                {

                }
            }
        }

    }
}
